<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lin&#39; 博客</title>
    <link>http://ihomeland.cn/zh-cn/posts/</link>
    <description>Recent content in Posts on Lin&#39; 博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 25 Mar 2020 17:12:06 +0800</lastBuildDate>
    
	<atom:link href="http://ihomeland.cn/zh-cn/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github two-factor 认证</title>
      <link>http://ihomeland.cn/zh-cn/posts/github-authentication/</link>
      <pubDate>Wed, 25 Mar 2020 17:12:06 +0800</pubDate>
      
      <guid>http://ihomeland.cn/zh-cn/posts/github-authentication/</guid>
      <description>笔者认为 Two-Factor（2FA） 认证是目前最为安全的认证方法。 Github 和 Google 都提供了这两种方式的登录和认证。 Github 提供的是 Time-based One Time Password(TOTP) 类型的 2FA。
 当打开 Github 的 2FA, 客户端就不再支持通过 Username + Password 的方式进行 pull 和 push.
 需要以下两种方法解决：
   设置 git remote 为 ssh 方式， 如：
   (base) [lgao@lgao gaol.github.io]$ git remote add fork git@github.com:gaol/gaol.github.io.git (base) [lgao@lgao gaol.github.io]$ git remote -v fork	git@github.com:gaol/gaol.github.io.git (fetch) fork	git@github.com:gaol/gaol.github.io.git (push) origin	https://github.com/gaol/gaol.github.io (fetch) origin	https://github.com/gaol/gaol.github.io (push)   然后在 push 的时候使用：</description>
    </item>
    
    <item>
      <title>使用 Raspberry Pi 配置 DLNA server</title>
      <link>http://ihomeland.cn/zh-cn/posts/set-up-dlna-server-in-raspberrypi/</link>
      <pubDate>Tue, 17 Mar 2020 17:12:06 +0800</pubDate>
      
      <guid>http://ihomeland.cn/zh-cn/posts/set-up-dlna-server-in-raspberrypi/</guid>
      <description>家里有一款老版本的 Raspberry Pi, 已经闲置在布满灰尘的角落里多年。 今日忽然心血来潮，心想不如搭建一个的 DLNA server 以便用于视频，音乐，以及照片的分享。
   什么是 DLNA 呢 DLNA 的全称为： Digital Living Network Alliance. 由 Sony 在 2003 年提出，旨在使得家庭网络中的设备可以共享媒体数据。
 DLNA 设备分为 Server 端 和 Client 端。 两者通过 WiFi 相连，所以需要把两种设备放到一个局域网内。
 Server 端设备主要是用来存储，分享与发送媒体文件。本文中的描述会 把一台 Raspberry Pi 变身为一台 DLNA Server 设备。 一般， PC 通过安装 DLNA Server 软件就可以工作。 比如 Windows 系统里的 Media Player 就自带了 DLNA server 功能。 而 Linux 下，我们采用 minidlna
 DLNA Client 端设备主要用来查看和播放媒体文件。 一般的智能电视，智能手机（非 Apple iPhone），智能音响等都集成了 DLNA client 的功能。</description>
    </item>
    
  </channel>
</rss>